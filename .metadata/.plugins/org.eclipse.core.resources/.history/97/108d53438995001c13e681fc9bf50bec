package othello;

import java.util.HashSet;
import java.util.Hashtable;

import players.Player;

public class Game {
	
    public static final String RESET = "\033[0m";  // Text Reset
    public static final String BLACK = "\033[0;30m";   // BLACK
    public static final String RED = "\033[0;31m";     // RED
    public static final String WHITE = "\033[0;37m";   // WHITE
	
	private final Frame[][] frame = new  Frame[8][8];
	
	private Player black;
	private Player red;
	
	private int round = 0;
	
	private HashSet<Frame> blackPlayable = new HashSet<>();
	private HashSet<Frame> redPlayable = new HashSet<>();
	
	public Game(Player player1, Player player2) {
		super();
		
		for (int i = 0 ; i < 8 ; i++) {
			for (int p = 0 ; p < 8 ; p++) {
				frame[i][p] = new Frame(i,p);
			}
		}
		
		frame[3][3].setRed();
		frame[4][4].setRed();
		frame[3][4].setBlack();
		frame[4][3].setBlack();
		
		this.black = player1;
		player1.setGame(this);
		this.red = player2;
		player2.setGame(this);
	}
	
	public void display() {	
		System.out.println("round "+round);
		for (int i = 0 ; i < 8 ; i++) {
			for (int p = 0 ; p < 8 ; p++) {
				String color = null;
				switch (frame[i][p].getState()) {
				case BLACK:
					color = BLACK;
					break;
				case RED:
					color = RED;
					break;
				case EMPTY:
					color = WHITE;
					break;
				}
				System.out.print("|");
				System.out.print(color + "ðŸŸ¨"+RESET);
				System.out.flush();
				if (p >= 7)
					System.out.println("|");
			}
		}	
	}
	
	public void start() {
		
		redPlayable.add(frame[4][2]);
		redPlayable.add(frame[5][3]);
		redPlayable.add(frame[4][2]);
		redPlayable.add(frame[3][5]);
		
		blackPlayable.add(frame[2][3]);
		blackPlayable.add(frame[3][2]);
		blackPlayable.add(frame[4][5]);
		blackPlayable.add(frame[5][4]);
		
		while(true) {
			Frame blackPlayed = black.play();
			
			redPlayable.remove(blackPlayed);
			blackPlayable.remove(blackPlayed);
			
			Frame redPlayed = red.play();
			display();
			round++;
		}
	}
}
